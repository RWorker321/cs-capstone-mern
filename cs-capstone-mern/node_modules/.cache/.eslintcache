[{"C:\\Users\\Z\\Desktop\\csCapstone Final Project\\cs-capstone-mern\\src\\index.js":"1","C:\\Users\\Z\\Desktop\\csCapstone Final Project\\cs-capstone-mern\\src\\reportWebVitals.js":"2","C:\\Users\\Z\\Desktop\\csCapstone Final Project\\cs-capstone-mern\\src\\App.js":"3","C:\\Users\\Z\\Desktop\\csCapstone Final Project\\cs-capstone-mern\\src\\components\\navbar.component.js":"4","C:\\Users\\Z\\Desktop\\csCapstone Final Project\\cs-capstone-mern\\src\\components\\create-user.component.js":"5","C:\\Users\\Z\\Desktop\\csCapstone Final Project\\cs-capstone-mern\\src\\components\\create-sleepgoal.component.js":"6","C:\\Users\\Z\\Desktop\\csCapstone Final Project\\cs-capstone-mern\\src\\components\\image-nasa.component.js":"7","C:\\Users\\Z\\Desktop\\csCapstone Final Project\\cs-capstone-mern\\src\\components\\sleepgoal-list.component.js":"8","C:\\Users\\Z\\Desktop\\csCapstone Final Project\\cs-capstone-mern\\src\\components\\create-sleepjournal.component.js":"9","C:\\Users\\Z\\Desktop\\csCapstone Final Project\\cs-capstone-mern\\src\\components\\edit-sleepjournal.component.js":"10","C:\\Users\\Z\\Desktop\\csCapstone Final Project\\cs-capstone-mern\\src\\components\\edit-sleepgoal.component.js":"11","C:\\Users\\Z\\Desktop\\csCapstone Final Project\\cs-capstone-mern\\src\\components\\sleep-metrics.component.js":"12","C:\\Users\\Z\\Desktop\\csCapstone Final Project\\cs-capstone-mern\\src\\components\\sleepjournal-list.component.js":"13","C:\\Users\\Z\\Desktop\\csCapstone Final Project\\cs-capstone-mern\\src\\components\\dream-interpreter.components.js":"14","C:\\Users\\Z\\Desktop\\csCapstone Final Project\\cs-capstone-mern\\src\\components\\user-list.component.js":"15"},{"size":565,"mtime":1624191149066,"results":"16","hashOfConfig":"17"},{"size":375,"mtime":1623330732147,"results":"18","hashOfConfig":"17"},{"size":2398,"mtime":1624018057353,"results":"19","hashOfConfig":"17"},{"size":1222,"mtime":1623330732143,"results":"20","hashOfConfig":"17"},{"size":2963,"mtime":1624021692310,"results":"21","hashOfConfig":"17"},{"size":4553,"mtime":1624192155158,"results":"22","hashOfConfig":"17"},{"size":1480,"mtime":1623499189574,"results":"23","hashOfConfig":"17"},{"size":1976,"mtime":1624119018852,"results":"24","hashOfConfig":"17"},{"size":4418,"mtime":1624187479213,"results":"25","hashOfConfig":"17"},{"size":4125,"mtime":1624021692292,"results":"26","hashOfConfig":"17"},{"size":4060,"mtime":1624021692293,"results":"27","hashOfConfig":"17"},{"size":3493,"mtime":1623499125656,"results":"28","hashOfConfig":"17"},{"size":2107,"mtime":1624115415429,"results":"29","hashOfConfig":"17"},{"size":4564,"mtime":1624021692294,"results":"30","hashOfConfig":"17"},{"size":1835,"mtime":1624018178703,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kwwh39",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},"C:\\Users\\Z\\Desktop\\csCapstone Final Project\\cs-capstone-mern\\src\\index.js",[],"C:\\Users\\Z\\Desktop\\csCapstone Final Project\\cs-capstone-mern\\src\\reportWebVitals.js",[],["67","68"],"C:\\Users\\Z\\Desktop\\csCapstone Final Project\\cs-capstone-mern\\src\\App.js",[],"C:\\Users\\Z\\Desktop\\csCapstone Final Project\\cs-capstone-mern\\src\\components\\navbar.component.js",[],"C:\\Users\\Z\\Desktop\\csCapstone Final Project\\cs-capstone-mern\\src\\components\\create-user.component.js",[],"C:\\Users\\Z\\Desktop\\csCapstone Final Project\\cs-capstone-mern\\src\\components\\create-sleepgoal.component.js",[],"C:\\Users\\Z\\Desktop\\csCapstone Final Project\\cs-capstone-mern\\src\\components\\image-nasa.component.js",[],"C:\\Users\\Z\\Desktop\\csCapstone Final Project\\cs-capstone-mern\\src\\components\\sleepgoal-list.component.js",["69"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst SleepGoal = props => (\r\n  <tr>\r\n    <td>{props.sleepgoal.username}</td>\r\n    <td>{props.sleepgoal.description}</td>\r\n    <td>{props.sleepgoal.duration}</td>\r\n    <td>{props.sleepgoal.date.substring(0,10)}</td>\r\n    <td>\r\n      <Link to={\"/editsleepgoal/\"+props.sleepgoal._id}>edit</Link> | <a href=\"#\" onClick={() => { props.deleteSleepGoal(props.sleepgoal._id) }}>delete</a>\r\n    </td>\r\n  </tr>\r\n)\r\n\r\nexport default class SleepGoalList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.deleteSleepGoal = this.deleteSleepGoal.bind(this)\r\n\r\n    this.state = {sleepgoal: []};\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get('http://localhost:5000/sleepgoals/')\r\n      .then(response => {\r\n        this.setState({ sleepgoal: response.data })\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  deleteSleepGoal(id) {\r\n    axios.delete('http://localhost:5000/sleepgoals/'+id)\r\n      .then(response => { console.log(response.data)});\r\n\r\n    this.setState({\r\n      sleepgoal: this.state.sleepgoal.filter(el => el._id !== id)\r\n    })\r\n  }\r\n\r\n  sleepGoalList() {\r\n    return this.state.sleepgoal.map(currentsleepgoal => {\r\n      return <SleepGoal sleepgoal={currentsleepgoal} deleteSleepGoal={this.deleteSleepGoal} key={currentsleepgoal._id}/>;\r\n    })\r\n  }\r\n\r\n  // Render/Return JSX for SleepGoal List\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>Sleep Goals</h3>\r\n        <table className=\"table\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              <th>Username</th>\r\n              <th>My Goal is to....</th>\r\n              <th>Duration Goal</th>\r\n              <th>Date</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            { this.sleepGoalList() }\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}","C:\\Users\\Z\\Desktop\\csCapstone Final Project\\cs-capstone-mern\\src\\components\\create-sleepjournal.component.js",["70"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport moment from 'moment';\r\n\r\nexport default class CreateSleepJournal extends Component {\r\n  // All React components begin with a super(props) call\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    this.onChangeDuration = this.onChangeDuration.bind(this);\r\n    this.onChangeDate = this.onChangeDate.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    // Set state properties corresponding with MongoDB document\r\n    // empty user array for drop down menu\r\n    this.state = {\r\n      username: '',\r\n      description: '',\r\n      duration: 0,\r\n      date: new Date(),\r\n      users: []\r\n    }\r\n  }\r\n\r\n  // componentDidMount() is a hook that gets invoked right after a React component has been mounted aka after the first render() lifecycle.\r\n  // https://linguinecode.com/post/understanding-react-componentdidmount\r\n  componentDidMount() {\r\n    axios.get('http://localhost:5000/users/')\r\n      .then(response => {\r\n        if (response.data.length > 0) {\r\n          // setState trigger UI update\r\n          this.setState({\r\n            users: response.data.map(user => user.username),\r\n            username: response.data[0].username\r\n          })\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  // Define change state functions\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value\r\n    })\r\n  }\r\n\r\n  onChangeDescription(e) {\r\n    this.setState({\r\n      description: e.target.value\r\n    })\r\n  }\r\n\r\n  onChangeDuration(e) {\r\n    this.setState({\r\n      duration: e.target.value\r\n    })\r\n  }\r\n\r\n  onChangeDate(date) {\r\n    this.setState({\r\n      date: date\r\n    })\r\n  }\r\n\r\n  // preventDefault is called on the event when submitting the form to prevent a browser reload/refresh\r\n  // https://www.robinwieruch.de/react-preventdefault\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    let sleepjournal = {\r\n      username: this.state.username,\r\n      description: this.state.description,\r\n      duration: this.state.duration,\r\n      date: this.state.date\r\n    }\r\n\r\n    console.log(sleepjournal);\r\n\r\n    axios.post('http://localhost:5000/sleepjournal/add', sleepjournal)\r\n      .then(res => console.log(res.data))\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    window.location = '/';\r\n  }\r\n\r\n  // Render/Return JSX for SleepJournal Create\r\n  render() {\r\n    return (\r\n    <div>\r\n      <h3>Create a Sleep Journal</h3>\r\n      <form onSubmit={this.onSubmit}>\r\n        <div className=\"form-group\"> \r\n          <label>Username: </label>\r\n          <select ref=\"userInput\"\r\n              required\r\n              className=\"form-control\"\r\n              value={this.state.username}\r\n              onChange={this.onChangeUsername}>\r\n              {\r\n                this.state.users.map(function(user) {\r\n                  return <option \r\n                    key={user}\r\n                    value={user}>{user}\r\n                    </option>;\r\n                })\r\n              }\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\"> \r\n          <label>Sleep Journal Description: </label>\r\n          <input  type=\"text\"\r\n              required\r\n              className=\"form-control\"\r\n              value={this.state.description}\r\n              onChange={this.onChangeDescription}\r\n              />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>How Long Did You Sleep (in hours): </label>\r\n          <input \r\n              type=\"number\" \r\n              className=\"form-control\"\r\n              value={this.state.duration}\r\n              onChange={this.onChangeDuration}\r\n              />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Date: </label>\r\n          <div>\r\n            <DatePicker\r\n              showTimeSelect\r\n              selected={this.state.date}\r\n              onChange={this.onChangeDate}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <input type=\"submit\" value=\"Create Sleep Journal Log\" className=\"btn btn-primary\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n    )\r\n  }\r\n}","C:\\Users\\Z\\Desktop\\csCapstone Final Project\\cs-capstone-mern\\src\\components\\edit-sleepjournal.component.js",[],"C:\\Users\\Z\\Desktop\\csCapstone Final Project\\cs-capstone-mern\\src\\components\\edit-sleepgoal.component.js",[],"C:\\Users\\Z\\Desktop\\csCapstone Final Project\\cs-capstone-mern\\src\\components\\sleep-metrics.component.js",[],"C:\\Users\\Z\\Desktop\\csCapstone Final Project\\cs-capstone-mern\\src\\components\\sleepjournal-list.component.js",["71"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n// \r\nconst SleepJournal = props => (\r\n  <tr>\r\n    <td>{props.sleepjournal.username}</td>\r\n    <td>{props.sleepjournal.description}</td>\r\n    <td>{props.sleepjournal.duration}</td>\r\n    <td>{props.sleepjournal.date.substring(0,10)}</td>\r\n    <td>\r\n      <Link to={\"/editsleepjournal/\"+props.sleepjournal._id}>edit</Link> | <a href=\"#\" onClick={() => { props.deleteSleepJournal(props.sleepjournal._id) }}>delete</a>\r\n    </td>\r\n  </tr>\r\n)\r\n\r\n// Pass functions to components\r\nexport default class SleepJournalList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.deleteSleepJournal = this.deleteSleepJournal.bind(this)\r\n\r\n    this.state = {sleepjournal: []};\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get('http://localhost:5000/sleepjournal/')\r\n      .then(response => {\r\n        this.setState({ sleepjournal: response.data })\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  deleteSleepJournal(id) {\r\n    axios.delete('http://localhost:5000/sleepjournal/'+id)\r\n      .then(response => { console.log(response.data)});\r\n\r\n    this.setState({\r\n        sleepjournal: this.state.sleepjournal.filter(el => el._id !== id)\r\n    })\r\n  }\r\n\r\n  sleepJournalList() {\r\n    return this.state.sleepjournal.map(currentsleepjournal => {\r\n      return <SleepJournal sleepjournal={currentsleepjournal} deleteSleepJournal={this.deleteSleepJournal} key={currentsleepjournal._id}/>;\r\n    })\r\n  }\r\n\r\n  // Render/Return JSX for SleepJournal List\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>Sleep Journals</h3>\r\n        <table className=\"table\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              <th>Username</th>\r\n              <th>I Had a Dream About...</th>\r\n              <th>Duration</th>\r\n              <th>Date</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            { this.sleepJournalList() }\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}","C:\\Users\\Z\\Desktop\\csCapstone Final Project\\cs-capstone-mern\\src\\components\\dream-interpreter.components.js",[],"C:\\Users\\Z\\Desktop\\csCapstone Final Project\\cs-capstone-mern\\src\\components\\user-list.component.js",["72","73"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n// \r\nconst Usernames = props => (\r\n  <tr>\r\n    <td>{props.user.username}</td>\r\n    <td>{props.user.firstname}</td>\r\n    <td>{props.user.lastname}</td>\r\n    <td>{props.user.age}</td>\r\n    <td>\r\n       <a href=\"#\" onClick={() => { props.deleteUsername(props.user._id) }}>delete</a>\r\n    </td>\r\n  </tr>\r\n)\r\n\r\n// Pass functions to components\r\nexport default class UsernameList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.deleteUsername = this.deleteUsername.bind(this)\r\n\r\n    this.state = {user: []};\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get('http://localhost:5000/users/')\r\n      .then(response => {\r\n        this.setState({ user: response.data })\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  deleteUsername(id) {\r\n    axios.delete('http://localhost:5000/users/'+id)\r\n      .then(response => { console.log(response.data)});\r\n\r\n    this.setState({\r\n        user: this.state.user.filter(el => el._id !== id)\r\n    })\r\n  }\r\n\r\n  usernameList() {\r\n    return this.state.user.map(currentuser => {\r\n      return <Usernames user={currentuser} deleteUsername={this.deleteUsername} key={currentuser._id}/>;\r\n    })\r\n  }\r\n\r\n  // Render/Return JSX for SleepJournal List\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>Usernames</h3>\r\n        <table className=\"table\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              <th>Username</th>\r\n              <th>First Name</th>\r\n              <th>Last Name</th>\r\n              <th>Age</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            { this.usernameList() }\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}",{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":12,"column":70,"nodeType":"80","endLine":12,"endColumn":145},{"ruleId":"81","severity":1,"message":"82","line":5,"column":8,"nodeType":"83","messageId":"84","endLine":5,"endColumn":14},{"ruleId":"78","severity":1,"message":"79","line":13,"column":76,"nodeType":"80","endLine":13,"endColumn":157},{"ruleId":"81","severity":1,"message":"85","line":2,"column":10,"nodeType":"83","messageId":"84","endLine":2,"endColumn":14},{"ruleId":"78","severity":1,"message":"79","line":13,"column":8,"nodeType":"80","endLine":13,"endColumn":77},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'moment' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]