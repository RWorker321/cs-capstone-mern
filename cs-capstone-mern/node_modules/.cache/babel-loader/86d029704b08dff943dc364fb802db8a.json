{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Z\\\\Desktop\\\\csCapstone Final Project\\\\cs-capstone-mern\\\\src\\\\components\\\\dream-interpreter.components.js\";\n\n/* WiP\r\nThis component will find keywords in dream journal and match those strings with similiar words.\r\nConsider using https://www.datamuse.com/api/\r\n */\nimport React from 'react';\nimport { Component, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class DreamInterpreter extends Component {\n  constructor(props) {\n    super(props);\n    const returnedWords = [];\n    const rhymingWords = [];\n    this.state = {\n      returnedWords,\n      rhymingWords\n    };\n    this.getJournalWords();\n    this.getRhymingWords();\n  }\n\n  getJournalWords() {\n    axios.get('http://localhost:5000/sleepjournal/').then(response => {\n      if (response.data.length > 0) {\n        const resData = response.data;\n        let journalString = []; // Array for storing journal words\n        // push string description to journalString array\n\n        resData.forEach(element => {\n          journalString.push(element.description);\n        });\n        console.log(journalString);\n        this.setState({});\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  getRhymingWords() {\n    fetch('https://api.datamuse.com/words?rel_rhy=').then(res => res.json()).then(result => {\n      this.setState({\n        rhymingWords: result.rhymingWords\n      });\n    }, error => {\n      this.setState({\n        error\n      });\n    });\n    console.log(this.state.words);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Your Dream Journal Suggest....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), this.state.returnedWords, this.state.rhymingWords]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Z/Desktop/csCapstone Final Project/cs-capstone-mern/src/components/dream-interpreter.components.js"],"names":["React","Component","useEffect","useState","axios","DreamInterpreter","constructor","props","returnedWords","rhymingWords","state","getJournalWords","getRhymingWords","get","then","response","data","length","resData","journalString","forEach","element","push","description","console","log","setState","catch","error","fetch","res","json","result","words","render"],"mappings":";;AAAA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,QAA/B,QAA8C,OAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,MAAMC,gBAAN,SAA+BJ,SAA/B,CAAyC;AACpDK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,UAAMC,aAAa,GAAG,EAAtB;AACA,UAAMC,YAAY,GAAG,EAArB;AAEA,SAAKC,KAAL,GAAa;AACTF,MAAAA,aADS;AAETC,MAAAA;AAFS,KAAb;AAIA,SAAKE,eAAL;AACA,SAAKC,eAAL;AACH;;AAEDD,EAAAA,eAAe,GAAG;AACdP,IAAAA,KAAK,CAACS,GAAN,CAAU,qCAAV,EACCC,IADD,CACMC,QAAQ,IAAI;AAChB,UAAIA,QAAQ,CAACC,IAAT,CAAcC,MAAd,GAAuB,CAA3B,EAA8B;AAC5B,cAAMC,OAAO,GAAGH,QAAQ,CAACC,IAAzB;AACA,YAAIG,aAAa,GAAG,EAApB,CAF4B,CAEJ;AACxB;;AACAD,QAAAA,OAAO,CAACE,OAAR,CAAgBC,OAAO,IAAI;AACvBF,UAAAA,aAAa,CAACG,IAAd,CAAmBD,OAAO,CAACE,WAA3B;AACH,SAFD;AAGAC,QAAAA,OAAO,CAACC,GAAR,CAAYN,aAAZ;AACA,aAAKO,QAAL,CAAc,EAAd;AAGC;AACF,KAdH,EAeCC,KAfD,CAeQC,KAAD,IAAW;AAChBJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACD,KAjBD;AAkBL;;AAEChB,EAAAA,eAAe,GAAG;AACdiB,IAAAA,KAAK,CAAC,yCAAD,CAAL,CACCf,IADD,CACMgB,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECjB,IAFD,CAGKkB,MAAD,IAAY;AACR,WAAKN,QAAL,CAAc;AACVjB,QAAAA,YAAY,EAAEuB,MAAM,CAACvB;AADX,OAAd;AAGH,KAPL,EAQKmB,KAAD,IAAW;AACP,WAAKF,QAAL,CAAc;AACVE,QAAAA;AADU,OAAd;AAGH,KAZL;AAcJJ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWuB,KAAvB;AACC;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,EAEC,KAAKxB,KAAL,CAAWF,aAFZ,EAGC,KAAKE,KAAL,CAAWD,YAHZ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAOH;;AA7DmD","sourcesContent":["/* WiP\r\nThis component will find keywords in dream journal and match those strings with similiar words.\r\nConsider using https://www.datamuse.com/api/\r\n */\r\nimport React from 'react';\r\nimport { Component, useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class DreamInterpreter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const returnedWords = [];\r\n        const rhymingWords = [];\r\n\r\n        this.state = { \r\n            returnedWords,\r\n            rhymingWords\r\n        };\r\n        this.getJournalWords()\r\n        this.getRhymingWords()\r\n    }\r\n\r\n    getJournalWords() {\r\n        axios.get('http://localhost:5000/sleepjournal/')\r\n        .then(response => {\r\n          if (response.data.length > 0) {\r\n            const resData = response.data;\r\n            let journalString = []; // Array for storing journal words\r\n            // push string description to journalString array\r\n            resData.forEach(element => {\r\n                journalString.push(element.description)\r\n            });  \r\n            console.log(journalString);\r\n            this.setState({\r\n\r\n              })\r\n            }\r\n          })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        })\r\n  }\r\n\r\n    getRhymingWords() {\r\n        fetch('https://api.datamuse.com/words?rel_rhy=')\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                this.setState({\r\n                    rhymingWords: result.rhymingWords\r\n                });\r\n            },\r\n            (error) => {\r\n                this.setState({\r\n                    error\r\n                });\r\n            }\r\n        )\r\n    console.log(this.state.words)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"App\">\r\n        <h1>Your Dream Journal Suggest....</h1>\r\n        {this.state.returnedWords}\r\n        {this.state.rhymingWords}\r\n        </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}