{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Z\\\\Desktop\\\\csCapstone Final Project\\\\cs-capstone-mern\\\\src\\\\components\\\\sleep-metrics.component.js\";\n// https://github.com/reactchartjs/react-chartjs-2/blob/master/example/src/charts/Line.js\nimport React from 'react';\nimport { Component, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Line } from 'react-chartjs-2'; // http://localhost:5000/sleepjournal/id/duration\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class SleepMetrics extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lineData: {}\n    };\n  }\n\n  componentDidMount() {\n    this.getSleepDuration();\n  }\n\n  getSleepDuration() {\n    axios.get('http://localhost:5000/sleepjournal/').then(response => {\n      if (response.data.length > 0) {\n        const resData = response.data;\n        let sleepDuration = [];\n        resData.forEach(element => {\n          sleepDuration.push(element.duration);\n        });\n        console.log(sleepDuration);\n        this.setState({\n          lineData: {\n            labels: ['Sun', 'Mon', 'Tues', 'Wed', 'Thurs', 'Fri', 'Sat'],\n            datasets: [{\n              label: 'Sleep Duration',\n              data: sleepDuration,\n              // Edit this with sleep journal duration\n              fill: true,\n              color: ['red', 'blue'],\n              backgroundColor: 'rgb(3, 0, 145)',\n              borderColor: 'rgba(255, 99, 132, 0.2)'\n            }]\n          }\n        });\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  } // Define dataset to be reflected on line graph\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sleep Metrics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"thead-light\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Sleep Metrics\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(Line, {\n            data: this.state.lineData,\n            options: {\n              title: {\n                display: true,\n                text: 'Sleep Metrics'\n              },\n              legend: {\n                display: true,\n                position: 'right'\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n\n} //export default SleepMetrics;","map":{"version":3,"sources":["C:/Users/Z/Desktop/csCapstone Final Project/cs-capstone-mern/src/components/sleep-metrics.component.js"],"names":["React","Component","useState","useEffect","axios","Line","SleepMetrics","constructor","props","state","lineData","componentDidMount","getSleepDuration","get","then","response","data","length","resData","sleepDuration","forEach","element","push","duration","console","log","setState","labels","datasets","label","fill","color","backgroundColor","borderColor","catch","error","render","title","display","text","legend","position"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,SAA9B,QAA+C,OAA/C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB,C,CAEA;;;AAEA,eAAe,MAAMC,YAAN,SAA2BL,SAA3B,CAAqC;AAClDM,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGC;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,gBAAL;AACD;;AAEHA,EAAAA,gBAAgB,GAAG;AAEnBR,IAAAA,KAAK,CAACS,GAAN,CAAU,qCAAV,EACGC,IADH,CACQC,QAAQ,IAAI;AAChB,UAAIA,QAAQ,CAACC,IAAT,CAAcC,MAAd,GAAuB,CAA3B,EAA8B;AAC5B,cAAMC,OAAO,GAAGH,QAAQ,CAACC,IAAzB;AACA,YAAIG,aAAa,GAAG,EAApB;AACAD,QAAAA,OAAO,CAACE,OAAR,CAAgBC,OAAO,IAAI;AACzBF,UAAAA,aAAa,CAACG,IAAd,CAAmBD,OAAO,CAACE,QAA3B;AACD,SAFD;AAGAC,QAAAA,OAAO,CAACC,GAAR,CAAYN,aAAZ;AACA,aAAKO,QAAL,CAAc;AACZhB,UAAAA,QAAQ,EAAE;AACRiB,YAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,EAAuB,KAAvB,EAA8B,OAA9B,EAAuC,KAAvC,EAA8C,KAA9C,CADA;AAERC,YAAAA,QAAQ,EAAE,CACR;AACEC,cAAAA,KAAK,EAAE,gBADT;AAEEb,cAAAA,IAAI,EAAEG,aAFR;AAEuB;AACrBW,cAAAA,IAAI,EAAE,IAHR;AAIEC,cAAAA,KAAK,EAAE,CACL,KADK,EAEL,MAFK,CAJT;AAQEC,cAAAA,eAAe,EAAE,gBARnB;AASEC,cAAAA,WAAW,EAAE;AATf,aADQ;AAFF;AADE,SAAd;AAkBD;AAEF,KA7BH,EA8BGC,KA9BH,CA8BUC,KAAD,IAAW;AAChBX,MAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACD,KAhCH;AAkCD,GAhDmD,CAmDpD;;;AACEC,EAAAA,MAAM,GAAG;AAEP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA,gCACE;AAAO,UAAA,SAAS,EAAC,aAAjB;AAAA,iCACE;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AAAA,iCACE,QAAC,IAAD;AACA,YAAA,IAAI,EAAE,KAAK3B,KAAL,CAAWC,QADjB;AAEA,YAAA,OAAO,EAAE;AACP2B,cAAAA,KAAK,EAAE;AACPC,gBAAAA,OAAO,EAAE,IADF;AAEPC,gBAAAA,IAAI,EAAE;AAFC,eADA;AAKPC,cAAAA,MAAM,EAAC;AACLF,gBAAAA,OAAO,EAAE,IADJ;AAELG,gBAAAA,QAAQ,EAAE;AAFL;AALA;AAFT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA2BD;;AAjFiD,C,CAqFpD","sourcesContent":["// https://github.com/reactchartjs/react-chartjs-2/blob/master/example/src/charts/Line.js\r\nimport React from 'react';\r\nimport { Component, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\n// http://localhost:5000/sleepjournal/id/duration\r\n\r\nexport default class SleepMetrics extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      lineData: {}\r\n      }\r\n    }\r\n    \r\n    componentDidMount() {\r\n      this.getSleepDuration();\r\n    }\r\n\r\n  getSleepDuration() {\r\n\r\n  axios.get('http://localhost:5000/sleepjournal/')\r\n    .then(response => {\r\n      if (response.data.length > 0) {\r\n        const resData = response.data;\r\n        let sleepDuration = [];\r\n        resData.forEach(element => {\r\n          sleepDuration.push(element.duration)\r\n        });  \r\n        console.log(sleepDuration);\r\n        this.setState({\r\n          lineData: {\r\n            labels: ['Sun', 'Mon', 'Tues', 'Wed', 'Thurs', 'Fri', 'Sat'],\r\n            datasets: [\r\n              {\r\n                label: 'Sleep Duration',\r\n                data: sleepDuration, // Edit this with sleep journal duration\r\n                fill: true,\r\n                color: [\r\n                  'red',\r\n                  'blue'\r\n                ],\r\n                backgroundColor: 'rgb(3, 0, 145)',\r\n                borderColor: 'rgba(255, 99, 132, 0.2)',\r\n              },\r\n            ],\r\n          }\r\n        })\r\n      }\r\n      \r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    })\r\n\r\n}\r\n\r\n  \r\n// Define dataset to be reflected on line graph\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <h1>Sleep Metrics</h1>\r\n        <table className=\"table\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              <th>Sleep Metrics</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <Line\r\n            data={this.state.lineData}\r\n            options={{\r\n              title: {\r\n              display: true,\r\n              text: 'Sleep Metrics'\r\n              },\r\n              legend:{\r\n                display: true,\r\n                position: 'right'\r\n              }\r\n            }}\r\n            />\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n//export default SleepMetrics;\r\n\r\n"]},"metadata":{},"sourceType":"module"}