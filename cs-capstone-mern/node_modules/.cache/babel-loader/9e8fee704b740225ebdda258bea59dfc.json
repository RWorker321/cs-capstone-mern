{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Z\\\\Desktop\\\\csCapstone Final Project\\\\cs-capstone-mern\\\\src\\\\components\\\\sleep-metrics.component.js\";\n// https://github.com/reactchartjs/react-chartjs-2/blob/master/example/src/charts/Line.js\nimport React from 'react';\nimport { Component, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Line } from 'react-chartjs-2'; // http://localhost:5000/sleepjournal/id/duration\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class SleepMetrics extends Component {\n  constructor(props) {\n    super(props);\n    this.onFilterDuration = this.onFilterDuration.bind(this);\n    this.state = {\n      sleepDuration: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/sleepjournal/' + this.props.match.params.id).then(response => {\n      this.setState({\n        username: response.data.username,\n        description: response.data.description,\n        duration: response.data.duration,\n        date: new Date(response.data.date)\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n    axios.get('http://localhost:5000/sleepjournal/').then(response => {\n      if (response.data.length > 0) {\n        this.setState({\n          sleepDuration: response.data.map(lineData => lineData.datasets.data)\n        });\n        console.log(sleepDuration);\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  onFilterDuration(e) {\n    this.state({\n      duration: e.target.value\n    });\n  } // Define dataset to be reflected on line graph\n\n\n  render() {\n    const lineData = {\n      labels: ['Sun', 'Mon', 'Tues', 'Wed', 'Thurs', 'Fri', 'Sat'],\n      datasets: [{\n        label: 'Sleep Duration',\n        data: [1, 2, 3, 4],\n        // Edit this with sleep journal duration\n        fill: true,\n        backgroundColor: 'rgb(3, 0, 145)',\n        borderColor: 'rgba(255, 99, 132, 0.2)'\n      }]\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sleep Metrics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"thead-light\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Sleep Metrics\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(Line, {\n            data: lineData,\n            options: {\n              title: {\n                display: true,\n                text: 'Sleep Metrics'\n              },\n              legend: {\n                display: true,\n                position: 'right'\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  }\n\n} //export default SleepMetrics;","map":{"version":3,"sources":["C:/Users/Z/Desktop/csCapstone Final Project/cs-capstone-mern/src/components/sleep-metrics.component.js"],"names":["React","Component","useState","useEffect","axios","Line","SleepMetrics","constructor","props","onFilterDuration","bind","state","sleepDuration","componentDidMount","get","match","params","id","then","response","setState","username","data","description","duration","date","Date","catch","error","console","log","length","map","lineData","datasets","e","target","value","render","labels","label","fill","backgroundColor","borderColor","title","display","text","legend","position"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,SAA9B,QAA+C,OAA/C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB,C,CAEA;;;AAEA,eAAe,MAAMC,YAAN,SAA2BL,SAA3B,CAAqC;AAClDM,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAE;AADJ,KAAb;AAIC;;AAILC,EAAAA,iBAAiB,GAAG;AAClBT,IAAAA,KAAK,CAACU,GAAN,CAAU,wCAAsC,KAAKN,KAAL,CAAWO,KAAX,CAAiBC,MAAjB,CAAwBC,EAAxE,EACGC,IADH,CACQC,QAAQ,IAAI;AAChB,WAAKC,QAAL,CAAc;AACZC,QAAAA,QAAQ,EAAEF,QAAQ,CAACG,IAAT,CAAcD,QADZ;AAEZE,QAAAA,WAAW,EAAEJ,QAAQ,CAACG,IAAT,CAAcC,WAFf;AAGZC,QAAAA,QAAQ,EAAEL,QAAQ,CAACG,IAAT,CAAcE,QAHZ;AAIZC,QAAAA,IAAI,EAAE,IAAIC,IAAJ,CAASP,QAAQ,CAACG,IAAT,CAAcG,IAAvB;AAJM,OAAd;AAMD,KARH,EASGE,KATH,CASS,UAAUC,KAAV,EAAiB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAXH;AAaAxB,IAAAA,KAAK,CAACU,GAAN,CAAU,qCAAV,EACGI,IADH,CACQC,QAAQ,IAAI;AAChB,UAAIA,QAAQ,CAACG,IAAT,CAAcS,MAAd,GAAuB,CAA3B,EAA8B;AAC5B,aAAKX,QAAL,CAAc;AACZR,UAAAA,aAAa,EAAEO,QAAQ,CAACG,IAAT,CAAcU,GAAd,CAAkBC,QAAQ,IAAIA,QAAQ,CAACC,QAAT,CAAkBZ,IAAhD;AADH,SAAd;AAIAO,QAAAA,OAAO,CAACC,GAAR,CAAYlB,aAAZ;AACD;AAEF,KAVH,EAWGe,KAXH,CAWUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAbH;AAeD;;AAEDnB,EAAAA,gBAAgB,CAAC0B,CAAD,EAAI;AACd,SAAKxB,KAAL,CAAW;AACTa,MAAAA,QAAQ,EAAEW,CAAC,CAACC,MAAF,CAASC;AADV,KAAX;AAGD,GAhD+C,CAqDpD;;;AACEC,EAAAA,MAAM,GAAG;AACP,UAAML,QAAQ,GAAG;AACfM,MAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,EAAuB,KAAvB,EAA8B,OAA9B,EAAuC,KAAvC,EAA8C,KAA9C,CADO;AAEfL,MAAAA,QAAQ,EAAE,CACR;AACEM,QAAAA,KAAK,EAAE,gBADT;AAEElB,QAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAFR;AAEsB;AACpBmB,QAAAA,IAAI,EAAE,IAHR;AAIEC,QAAAA,eAAe,EAAE,gBAJnB;AAKEC,QAAAA,WAAW,EAAE;AALf,OADQ;AAFK,KAAjB;AAYA,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA,gCACE;AAAO,UAAA,SAAS,EAAC,aAAjB;AAAA,iCACE;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AAAA,iCACE,QAAC,IAAD;AACA,YAAA,IAAI,EAAEV,QADN;AAEA,YAAA,OAAO,EAAE;AACPW,cAAAA,KAAK,EAAE;AACPC,gBAAAA,OAAO,EAAE,IADF;AAEPC,gBAAAA,IAAI,EAAE;AAFC,eADA;AAKPC,cAAAA,MAAM,EAAC;AACLF,gBAAAA,OAAO,EAAE,IADJ;AAELG,gBAAAA,QAAQ,EAAE;AAFL;AALA;AAFT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA2BD;;AA9FiD,C,CAkGpD","sourcesContent":["// https://github.com/reactchartjs/react-chartjs-2/blob/master/example/src/charts/Line.js\r\nimport React from 'react';\r\nimport { Component, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\n// http://localhost:5000/sleepjournal/id/duration\r\n\r\nexport default class SleepMetrics extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.onFilterDuration = this.onFilterDuration.bind(this);\r\n    \r\n    this.state = {\r\n      sleepDuration: [],\r\n\r\n      }\r\n    };\r\n    \r\n\r\n    \r\ncomponentDidMount() {\r\n  axios.get('http://localhost:5000/sleepjournal/'+this.props.match.params.id)\r\n    .then(response => {\r\n      this.setState({\r\n        username: response.data.username,\r\n        description: response.data.description,\r\n        duration: response.data.duration,\r\n        date: new Date(response.data.date)\r\n      })   \r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    })\r\n\r\n  axios.get('http://localhost:5000/sleepjournal/')\r\n    .then(response => {\r\n      if (response.data.length > 0) {\r\n        this.setState({\r\n          sleepDuration: response.data.map(lineData => lineData.datasets.data),\r\n          \r\n        })\r\n        console.log(sleepDuration);\r\n      }\r\n      \r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    })\r\n\r\n}\r\n\r\nonFilterDuration(e) {\r\n      this.state({\r\n        duration: e.target.value\r\n      })\r\n    }\r\n  \r\n\r\n\r\n\r\n// Define dataset to be reflected on line graph\r\n  render() {\r\n    const lineData = {\r\n      labels: ['Sun', 'Mon', 'Tues', 'Wed', 'Thurs', 'Fri', 'Sat'],\r\n      datasets: [\r\n        {\r\n          label: 'Sleep Duration',\r\n          data: [1, 2, 3, 4], // Edit this with sleep journal duration\r\n          fill: true,\r\n          backgroundColor: 'rgb(3, 0, 145)',\r\n          borderColor: 'rgba(255, 99, 132, 0.2)',\r\n        },\r\n      ],\r\n    }\r\n    return (\r\n      <div>\r\n        <h1>Sleep Metrics</h1>\r\n        <table className=\"table\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              <th>Sleep Metrics</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <Line\r\n            data={lineData}\r\n            options={{\r\n              title: {\r\n              display: true,\r\n              text: 'Sleep Metrics'\r\n              },\r\n              legend:{\r\n                display: true,\r\n                position: 'right'\r\n              }\r\n            }}\r\n            />\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n//export default SleepMetrics;\r\n\r\n"]},"metadata":{},"sourceType":"module"}