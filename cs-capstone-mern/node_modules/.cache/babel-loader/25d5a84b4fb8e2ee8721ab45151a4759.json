{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Z\\\\Desktop\\\\csCapstone Final Project\\\\cs-capstone-mern\\\\src\\\\components\\\\dream-interpreter.components.js\";\n\n/* WiP\r\nThis component will find keywords in dream journal and match those strings with similiar words.\r\nConsider using https://www.datamuse.com/api/\r\n */\nimport React from 'react';\nimport { Component, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class DreamInterpreter extends Component {\n  constructor(props) {\n    super(props);\n    const returnedWords = [];\n    const rhymingWords = [];\n    this.state = {\n      returnedWords,\n      rhymingWords\n    };\n    this.getJournalWords();\n    this.getRhymingWords();\n  }\n\n  getJournalWords() {\n    fetch(\"http://localhost:5000/sleepjournal/\").then(res => res.json()).then(result => {\n      setState({\n        returnedWords: result.returnedWords\n      });\n    }, error => {\n      this.setState({\n        error\n      });\n    });\n    console.log(this.state.words);\n  }\n\n  getRhymingWords() {\n    fetch('https://api.datamuse.com/words?rel_rhy=' + this.props.match.params.returnedWords[0]).then(res => res.json()).then(result => {\n      this.setState({\n        rhymingWords: result.rhymingWords\n      });\n    }, error => {\n      this.setState({\n        error\n      });\n    });\n    console.log(this.state.words);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Your Dream Journal Suggest....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), this.state.returnedWords, this.state.rhymingWords]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Z/Desktop/csCapstone Final Project/cs-capstone-mern/src/components/dream-interpreter.components.js"],"names":["React","Component","useEffect","useState","DreamInterpreter","constructor","props","returnedWords","rhymingWords","state","getJournalWords","getRhymingWords","fetch","then","res","json","result","setState","error","console","log","words","match","params","render"],"mappings":";;AAAA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,QAA/B,QAA8C,OAA9C;;AAEA,eAAe,MAAMC,gBAAN,SAA+BH,SAA/B,CAAyC;AACpDI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,UAAMC,aAAa,GAAG,EAAtB;AACA,UAAMC,YAAY,GAAG,EAArB;AAEA,SAAKC,KAAL,GAAa;AACTF,MAAAA,aADS;AAETC,MAAAA;AAFS,KAAb;AAIA,SAAKE,eAAL;AACA,SAAKC,eAAL;AACH;;AAEDD,EAAAA,eAAe,GAAG;AACdE,IAAAA,KAAK,CAAC,qCAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAGKG,MAAD,IAAY;AACRC,MAAAA,QAAQ,CAAC;AACLV,QAAAA,aAAa,EAAES,MAAM,CAACT;AADjB,OAAD,CAAR;AAGH,KAPL,EAQKW,KAAD,IAAW;AACP,WAAKD,QAAL,CAAc;AACVC,QAAAA;AADU,OAAd;AAGH,KAZL;AAcAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWY,KAAvB;AACH;;AAEDV,EAAAA,eAAe,GAAG;AACdC,IAAAA,KAAK,CAAC,4CAA0C,KAAKN,KAAL,CAAWgB,KAAX,CAAiBC,MAAjB,CAAwBhB,aAAxB,CAAsC,CAAtC,CAA3C,CAAL,CACCM,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAGKG,MAAD,IAAY;AACR,WAAKC,QAAL,CAAc;AACVT,QAAAA,YAAY,EAAEQ,MAAM,CAACR;AADX,OAAd;AAGH,KAPL,EAQKU,KAAD,IAAW;AACP,WAAKD,QAAL,CAAc;AACVC,QAAAA;AADU,OAAd;AAGH,KAZL;AAcJC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWY,KAAvB;AACC;;AAEDG,EAAAA,MAAM,GAAG;AACL,wBACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,EAEC,KAAKf,KAAL,CAAWF,aAFZ,EAGC,KAAKE,KAAL,CAAWD,YAHZ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAOH;;AA1DmD","sourcesContent":["/* WiP\r\nThis component will find keywords in dream journal and match those strings with similiar words.\r\nConsider using https://www.datamuse.com/api/\r\n */\r\nimport React from 'react';\r\nimport { Component, useEffect, useState} from 'react';\r\n\r\nexport default class DreamInterpreter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const returnedWords = [];\r\n        const rhymingWords = [];\r\n\r\n        this.state = { \r\n            returnedWords,\r\n            rhymingWords\r\n        };\r\n        this.getJournalWords()\r\n        this.getRhymingWords()\r\n    }\r\n\r\n    getJournalWords() {\r\n        fetch(\"http://localhost:5000/sleepjournal/\")\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                setState({\r\n                    returnedWords: result.returnedWords\r\n                });\r\n            },\r\n            (error) => {\r\n                this.setState({\r\n                    error\r\n                });\r\n            }\r\n        )\r\n        console.log(this.state.words)\r\n    }\r\n\r\n    getRhymingWords() {\r\n        fetch('https://api.datamuse.com/words?rel_rhy='+this.props.match.params.returnedWords[0])\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                this.setState({\r\n                    rhymingWords: result.rhymingWords\r\n                });\r\n            },\r\n            (error) => {\r\n                this.setState({\r\n                    error\r\n                });\r\n            }\r\n        )\r\n    console.log(this.state.words)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"App\">\r\n        <h1>Your Dream Journal Suggest....</h1>\r\n        {this.state.returnedWords}\r\n        {this.state.rhymingWords}\r\n        </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}