{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Z\\\\Desktop\\\\csCapstone Final Project\\\\cs-capstone-mern\\\\src\\\\components\\\\sleep-metrics.component.js\";\n// https://github.com/reactchartjs/react-chartjs-2/blob/master/example/src/charts/Line.js\nimport React, { Component, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { Line } from 'react-chartjs-2'; // http://localhost:5000/sleepjournal/id/duration\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class SleepMetrics extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      SleepMetrics: [],\n      data: {\n        labels: ['Sun', 'Mon', 'Tues', 'Wed', 'Thurs', 'Fri', 'Sat'],\n        datasets: [{\n          label: 'Sleep Duration',\n          data: [1, 2, 3, 4],\n          // Edit this with sleep journal duration\n          fill: true,\n          backgroundColor: 'rgb(3, 0, 145)',\n          borderColor: 'rgba(255, 99, 132, 0.2)'\n        }]\n      }\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/sleepjournal/').then(response => {\n      this.setState({\n        sleepjournal: response.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  getSleepMetrics() {\n    axios.get('http://localhost:5000/sleepgoals').then(response => {\n      console.log(response.data);\n    }); //const sleepDuration = response.data; // Sets response data as a variable for mapping\n\n    this.setState({\n      sleepDuration: this.state.sleepDuration.filter(el => el._id !== id)\n    });\n  }\n\n  sleepDurationMetrics() {\n    return this.state.sleepDuration.map(currentsleepduration => {\n      return /*#__PURE__*/_jsxDEV(\"sleepDurationMetrics\", {}, currentsleepjournal.duration, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 16\n      }, this);\n    });\n  } // Define dataset to be reflected on line graph\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Sleep Goals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"thead-light\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.sleepDurationMetrics()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n\n} //export default SleepMetrics;","map":{"version":3,"sources":["C:/Users/Z/Desktop/csCapstone Final Project/cs-capstone-mern/src/components/sleep-metrics.component.js"],"names":["React","Component","useEffect","Link","axios","Line","SleepMetrics","constructor","props","state","data","labels","datasets","label","fill","backgroundColor","borderColor","componentDidMount","get","then","response","setState","sleepjournal","catch","error","console","log","getSleepMetrics","sleepDuration","filter","el","_id","id","sleepDurationMetrics","map","currentsleepduration","currentsleepjournal","duration","render"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB,C,CAEA;;;AAGA,eAAe,MAAMC,YAAN,SAA2BL,SAA3B,CAAqC;AAClDM,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXH,MAAAA,YAAY,EAAE,EADH;AAETI,MAAAA,IAAI,EAAE;AACJC,QAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,EAAuB,KAAvB,EAA8B,OAA9B,EAAuC,KAAvC,EAA8C,KAA9C,CADJ;AAEJC,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,KAAK,EAAE,gBADT;AAEEH,UAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAFR;AAEsB;AACpBI,UAAAA,IAAI,EAAE,IAHR;AAIEC,UAAAA,eAAe,EAAE,gBAJnB;AAKEC,UAAAA,WAAW,EAAE;AALf,SADQ;AAFN;AAFG,KAAb;AAeC;;AAEHC,EAAAA,iBAAiB,GAAG;AAClBb,IAAAA,KAAK,CAACc,GAAN,CAAU,qCAAV,EACGC,IADH,CACQC,QAAQ,IAAI;AAChB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,YAAY,EAAEF,QAAQ,CAACV;AAAzB,OAAd;AACD,KAHH,EAIGa,KAJH,CAIUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KANH;AAOD;;AAEDG,EAAAA,eAAe,GAAG;AAChBvB,IAAAA,KAAK,CACJc,GADD,CACK,kCADL,EAECC,IAFD,CAEMC,QAAQ,IAAI;AAAEK,MAAAA,OAAO,CAACC,GAAR,CAAYN,QAAQ,CAACV,IAArB;AAA2B,KAF/C,EADgB,CAIhB;;AAEA,SAAKW,QAAL,CAAc;AACZO,MAAAA,aAAa,EAAE,KAAKnB,KAAL,CAAWmB,aAAX,CAAyBC,MAAzB,CAAgCC,EAAE,IAAIA,EAAE,CAACC,GAAH,KAAWC,EAAjD;AADH,KAAd;AAID;;AAECC,EAAAA,oBAAoB,GAAG;AACrB,WAAO,KAAKxB,KAAL,CAAWmB,aAAX,CAAyBM,GAAzB,CAA6BC,oBAAoB,IAAI;AAC1D,0BAAO,oCAA2BC,mBAAmB,CAACC,QAA/C;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFM,CAAP;AAGD,GA9C+C,CAiDpD;;;AACEC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA,gCACE;AAAO,UAAA,SAAS,EAAC,aAAjB;AAAA,iCACE;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AAAA,oBACI,KAAKL,oBAAL;AADJ;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AAlEiD,C,CAqEpD","sourcesContent":["// https://github.com/reactchartjs/react-chartjs-2/blob/master/example/src/charts/Line.js\r\nimport React, { Component, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\n// http://localhost:5000/sleepjournal/id/duration\r\n\r\n\r\nexport default class SleepMetrics extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      SleepMetrics: [],\r\n        data: {\r\n          labels: ['Sun', 'Mon', 'Tues', 'Wed', 'Thurs', 'Fri', 'Sat'],\r\n          datasets: [\r\n            {\r\n              label: 'Sleep Duration',\r\n              data: [1, 2, 3, 4], // Edit this with sleep journal duration\r\n              fill: true,\r\n              backgroundColor: 'rgb(3, 0, 145)',\r\n              borderColor: 'rgba(255, 99, 132, 0.2)',\r\n            },\r\n          ],\r\n        }\r\n      }\r\n    };\r\n\r\n  componentDidMount() {\r\n    axios.get('http://localhost:5000/sleepjournal/')\r\n      .then(response => {\r\n        this.setState({ sleepjournal: response.data })\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  getSleepMetrics() {\r\n    axios\r\n    .get('http://localhost:5000/sleepgoals')\r\n    .then(response => { console.log(response.data)});\r\n    //const sleepDuration = response.data; // Sets response data as a variable for mapping\r\n    \r\n    this.setState({ \r\n      sleepDuration: this.state.sleepDuration.filter(el => el._id !== id)\r\n    }\r\n    )\r\n  }\r\n\r\n    sleepDurationMetrics() {\r\n      return this.state.sleepDuration.map(currentsleepduration => {\r\n        return <sleepDurationMetrics key={currentsleepjournal.duration}/>;\r\n      })\r\n    }\r\n    \r\n\r\n// Define dataset to be reflected on line graph\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>Sleep Goals</h3>\r\n        <table className=\"table\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              <th>Username</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            { this.sleepDurationMetrics() }\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n//export default SleepMetrics;\r\n\r\n"]},"metadata":{},"sourceType":"module"}